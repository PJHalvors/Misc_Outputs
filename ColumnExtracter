#!/bin/sh

##== 
##== Make sure you cd into your dir with csvs before you start!
##== Find which column numbers correspond to select IDs

RUN_COLUMNIDS=0 ##== change to 1 to turn on
if [ $RUN_COLUMNIDS == 1 ]
then

for f in raw_data/*.csv ##== for each CSV file in path/
do

  echo "Extracting column numbers $f"
##== select column numbers that correspond to headers
  sed -n $'1s/,/\\\n/gp' $f | grep -nx 'Chr';
  sed -n $'1s/,/\\\n/gp' $f | grep -nx 'Start';
  sed -n $'1s/,/\\\n/gp' $f | grep -nx 'End';

done

fi ##== Kill switch

##== When I ran this, the columns were 1, 3, and 6 for Chr start end

##== New Switch; you can turn on by changing value to 1
RUN_CSVTOBED=0
if [ $RUN_CSVTOBED == 1 ]
then
##== if the switch is turned on, then for every CSV file in path/ copy the three columns
##== paste three columns in tab delim format as BED file
for f in raw_data/*.csv;
do
  echo "Processing $f";
  fout=`basename $f | sed 's/.csv$/.raw.bed/g'`
  awk -F "\"*,\"*" '{OFS="\t"; print $1,$3,$6}' $f > processed_data/$fout;
done

fi

##== if all bed files were merged, files will be identical, 
##== so check unique ID values, list attributes, and count rows
##== number of rows = number of peaks called but includes UN-random

RUN_FORMATBED=0
if [ $RUN_FORMATBED == 1 ]
then

md5 processed_data/*.raw.bed
ls -lht
wc -l raw_data/*.csv
wc -l processed_data/*.raw.bed

##== for each RAW BED file, remove any rows that have random OR NA in that row
##== save that output as a new SORTED BED file
for f in processed_data/*.raw.bed;
do

  echo "Processing $f";
  fout=`echo $f | sed 's/.raw.bed/.sorted.bed/g'`;
  cat $f | tail -n+2 | egrep -v "random|NA" | sort -k 1,1 -k 2,2n > $fout;
done

fi
